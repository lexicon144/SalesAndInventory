/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package salesandinventory;

import java.awt.Dimension;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author dell
 */
public class frm_Transaction extends javax.swing.JFrame {
SalesAndInventory sai = new SalesAndInventory();
dataForTableBuilding hatsune = new dataForTableBuilding();
RNG_Sama rngSama = new RNG_Sama();

protected int TRANS_ID = 0,TRANS_QUANTITY = 0;
protected double TRANS_TOTALPRICE = 0.0, TRANS_BASEPRICE = 0.0;
protected String TRANS_PRODUCT = "", TRANS_CLIENT = "";
protected String TRANS_DATE = String.valueOf(System.currentTimeMillis());
protected Boolean TRANS_PROCESSED = false;
    /**
     * Creates new form frm_Sales
     */
    public frm_Transaction() {
        initComponents();
        setResizable(false);
        TRANS_ID = rngSama.RNGmaker();
        txtTrans_ID.setText(Integer.toString(TRANS_ID));
        nukeTextFields();
    }
    /*
    public void setMrRandom(){
        RNGmaker();
        txtTrans_ID.setText(Integer.toString(TRANS_ID));
    }
    /*
    public void RNGmaker(){
        Random randomGenerator = new Random();
        TRANS_ID = randomGenerator.nextInt(999999999);
    }*/

    protected boolean checkTextFields(){
        System.out.println("Called checkTextFields()");
        boolean value = false;
        JTextField fields[]= new JTextField[5];
        //this is the initialization of all those fields
        //need to scan EACH and every one of them just to ensure nothing is null.
        fields[0] = txtTrans_ID;
        fields[1] = txtTrans_Product;
        fields[2] = txtTrans_Quantity;
        fields[3] = txtTrans_BasePrice;
        fields[4] = txt_TotalPrice;
        for(int i = 0; i < fields.length ;++i) {
            if(fields[i].getText().isEmpty()){
                System.out.println("FIELD["+i+"] NULL!!!");
                value = true;
                break;
            }
        }
        System.out.println("checkTextFields() = " + value);
        /*
        IF VALUE is FALSE, Then FIELDS are not EMPTY
        IF VALUE is TRUE, Then FIELDS are EMPTY
        */
        return value;
    }
    
    protected void nukeTextFields(){
        System.out.println("Called nukeTextFields()");
        JTextField fields[]= new JTextField[5];
        fields[0] = txtTrans_ID;
        fields[1] = txtTrans_Product;
        fields[2] = txtTrans_Quantity;
        fields[3] = txtTrans_BasePrice;
        fields[4] = txt_TotalPrice;
        for(int i = 0; i < fields.length ;++i) {
            fields[i].setText(null);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame_BrowseProduct = new javax.swing.JFrame();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_Display = new javax.swing.JTable();
        btn_UseThisProduct = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtTrans_Product = new javax.swing.JTextField();
        txtTrans_Quantity = new javax.swing.JTextField();
        txtTrans_ID = new javax.swing.JTextField();
        btnInsert = new javax.swing.JButton();
        btnClearFields = new javax.swing.JButton();
        btnRetrieveTransaction = new javax.swing.JButton();
        txt_TotalPrice = new javax.swing.JTextField();
        txtTrans_BasePrice = new javax.swing.JTextField();
        btnBrowseProduct = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        jFrame_BrowseProduct.setBounds(new java.awt.Rectangle(0, 0, 393, 292));
        jFrame_BrowseProduct.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        jFrame_BrowseProduct.setMinimumSize(new java.awt.Dimension(398, 333));
        jFrame_BrowseProduct.setResizable(false);
        jFrame_BrowseProduct.setSize(new java.awt.Dimension(400, 375));
        jFrame_BrowseProduct.setType(java.awt.Window.Type.POPUP);
        jFrame_BrowseProduct.getContentPane().setLayout(null);

        table_Display.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product ID", "Product Name", "Product Base Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table_Display);

        jFrame_BrowseProduct.getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 90, 370, 100);

        btn_UseThisProduct.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        btn_UseThisProduct.setText("Use this Product!");
        btn_UseThisProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_UseThisProductActionPerformed(evt);
            }
        });
        jFrame_BrowseProduct.getContentPane().add(btn_UseThisProduct);
        btn_UseThisProduct.setBounds(100, 250, 190, 60);

        jLabel2.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 48)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Browse a Product...");
        jFrame_BrowseProduct.getContentPane().add(jLabel2);
        jLabel2.setBounds(21, 16, 330, 40);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 48)); // NOI18N
        jLabel1.setText("New Transaction...");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(80, 10, 330, 70);

        txtTrans_Product.setEditable(false);
        txtTrans_Product.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtTrans_Product.setText("Product name");
        getContentPane().add(txtTrans_Product);
        txtTrans_Product.setBounds(130, 180, 200, 40);

        txtTrans_Quantity.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtTrans_Quantity.setText("product quantity");
        getContentPane().add(txtTrans_Quantity);
        txtTrans_Quantity.setBounds(130, 350, 200, 40);

        txtTrans_ID.setEditable(false);
        txtTrans_ID.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtTrans_ID.setText("transID");
        getContentPane().add(txtTrans_ID);
        txtTrans_ID.setBounds(130, 110, 200, 30);

        btnInsert.setText("Save Transaction");
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });
        getContentPane().add(btnInsert);
        btnInsert.setBounds(50, 560, 180, 50);

        btnClearFields.setText("Clear All Fields");
        btnClearFields.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearFieldsActionPerformed(evt);
            }
        });
        getContentPane().add(btnClearFields);
        btnClearFields.setBounds(50, 500, 180, 50);

        btnRetrieveTransaction.setText("Retrieve a Transaction");
        btnRetrieveTransaction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRetrieveTransactionActionPerformed(evt);
            }
        });
        getContentPane().add(btnRetrieveTransaction);
        btnRetrieveTransaction.setBounds(240, 500, 180, 50);

        txt_TotalPrice.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_TotalPrice.setText("prdTotalPrice");
        getContentPane().add(txt_TotalPrice);
        txt_TotalPrice.setBounds(130, 390, 200, 40);

        txtTrans_BasePrice.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtTrans_BasePrice.setText("prd base price");
        getContentPane().add(txtTrans_BasePrice);
        txtTrans_BasePrice.setBounds(130, 280, 200, 40);

        btnBrowseProduct.setText("Browse Product");
        btnBrowseProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseProductActionPerformed(evt);
            }
        });
        getContentPane().add(btnBrowseProduct);
        btnBrowseProduct.setBounds(130, 220, 200, 30);

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        getContentPane().add(btnCancel);
        btnCancel.setBounds(240, 560, 180, 50);

        setSize(new java.awt.Dimension(495, 710));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
    TRANS_DATE = String.valueOf(System.currentTimeMillis());
    try {
        sai.sql = "INSERT INTO `transaction`(`trans_ID`, `trans_Product`, `trans_Quantity`,`trans_TotalPrice`, `trans_Client`, `trans_Date`, `trans_Processed`) VALUES (?,?,?,?,?,?,?)";
    
        sai.pStmt = sai.chainSmokersConnection().prepareStatement(sai.sql);
        sai.pStmt.setInt(1,TRANS_ID);
        sai.pStmt.setString(2,TRANS_PRODUCT);
        sai.pStmt.setInt(3,TRANS_QUANTITY);
        sai.pStmt.setDouble(4,TRANS_TOTALPRICE);
        sai.pStmt.setString(5, TRANS_CLIENT);
        sai.pStmt.setString(6, TRANS_DATE);
        sai.pStmt.setBoolean(7, TRANS_PROCESSED);
        sai.pStmt.execute();
        
        JOptionPane.showMessageDialog(null, "Successfully registered THIS.TRANSACTION " + TRANS_ID + " @ " + TRANS_DATE + " to " + TRANS_CLIENT);
        sai.pStmt.close();
        sai.chainSmokersConnection().close();
        
    } catch (ClassNotFoundException | SQLException ex) {
        Logger.getLogger(frm_Transaction.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_btnInsertActionPerformed

    private void btnClearFieldsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearFieldsActionPerformed
        // TODO add your handling code here:
        nukeTextFields();
        TRANS_ID = rngSama.RNGmaker();
        txtTrans_ID.setText(Integer.toString(TRANS_ID));
    }//GEN-LAST:event_btnClearFieldsActionPerformed

    private void btnRetrieveTransactionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRetrieveTransactionActionPerformed
        // TODO add your handling code here:
        try {
        String anotherString =  JOptionPane.showInputDialog("Type in the ID / NAME of the TRANSACTION you are looking for... ");
        
        if (anotherString != null){
            sai.sql = "SELECT * FROM transactions WHERE (trans_ID = '"+anotherString+"')";
            try (Statement stmt = sai.chainSmokersConnection().createStatement()) {
                ResultSet qqrs = stmt.executeQuery(sai.sql);
                while(qqrs.next()){
                    txtTrans_ID.setText(qqrs.getString("employee_Id"));
                    txtTrans_Product.setText(qqrs.getString("user_EmployeeName"));
                    txtTrans_Quantity.setText(Double.toString(qqrs.getDouble("user_Rate")));
                    txt_TotalPrice.setText(qqrs.getString("user_Address"));
                    TRANS_PROCESSED = qqrs.getBoolean("trans_Processed");
                    TRANS_DATE = qqrs.getString("trans_Date");
                }
                qqrs.close();
            }
            sai.chainSmokersConnection().close();
        }else{
            JOptionPane.showMessageDialog(null, "Please enter non-NULL data");
        }
    } catch (ClassNotFoundException | SQLException ex) {
        Logger.getLogger(frm_EmpForm.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_btnRetrieveTransactionActionPerformed

    private void btnBrowseProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseProductActionPerformed
        // TODO add your handling code here:
        try {
            sai.sql = "SELECT prdId, prdName, prdPrice FROM prod_reg";
            Statement stmt = sai.chainSmokersConnection().createStatement();
            ResultSet qqrs = stmt.executeQuery(sai.sql);
            
            table_Display.setModel(hatsune.tableModelMaker(qqrs));
            
            jFrame_BrowseProduct.setPreferredSize(new Dimension(400, 275));
            jFrame_BrowseProduct.setResizable(false);
            jFrame_BrowseProduct.setVisible(true);
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(frm_EmpForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnBrowseProductActionPerformed

    private void btn_UseThisProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_UseThisProductActionPerformed
        final int row = table_Display.getSelectedRow();
        Object iLikeNachos = table_Display.getValueAt(row, 1);
        Object youLikeNachos = table_Display.getValueAt(row, 2);
        txtTrans_Product.setText(String.valueOf(iLikeNachos));
        txtTrans_BasePrice.setText(String.valueOf(youLikeNachos));
        this.jFrame_BrowseProduct.dispose();
    }//GEN-LAST:event_btn_UseThisProductActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        frm_mainmenu openThis = new frm_mainmenu();
        openThis.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frm_Transaction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frm_Transaction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frm_Transaction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frm_Transaction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frm_Transaction().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBrowseProduct;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnClearFields;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnRetrieveTransaction;
    private javax.swing.JButton btn_UseThisProduct;
    private javax.swing.JFrame jFrame_BrowseProduct;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table_Display;
    private javax.swing.JTextField txtTrans_BasePrice;
    private javax.swing.JTextField txtTrans_ID;
    private javax.swing.JTextField txtTrans_Product;
    private javax.swing.JTextField txtTrans_Quantity;
    private javax.swing.JTextField txt_TotalPrice;
    // End of variables declaration//GEN-END:variables
}
